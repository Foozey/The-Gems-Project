plugins {
    id 'idea'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version "${forgegradle_version}"
    id 'org.spongepowered.mixin' version "${mixingradle_version}"
    id 'org.parchmentmc.librarian.forgegradle' version "${librarian_version}"
}

version = "${mc_version}-${mod_version}"
group = "com.foozey.${modid}"
archivesBaseName = "${modid}"

java.toolchain.languageVersion = JavaLanguageVersion.of(17)
println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))

minecraft {
    mappings channel: "${mapping_type}", version: "${mapping_version}-${mc_version}"
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
    runs {
        configureEach {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            mods {
                "${modid}" {
                    source sourceSets.main
                }
            }
        }
        client {
            property 'forge.enabledGameTestNamespaces', modid
        }
        server {
            property 'forge.enabledGameTestNamespaces', modid
            args '--nogui'
        }
        data {
            args '--mod', 'gems', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
        }
    }
}

sourceSets.main.resources {
    srcDir 'src/generated/resources'
}

repositories {
    maven {
        name = "Illusive Soulworks"
        url = "https://maven.theillusivec4.top"
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${mc_version}-${forge_version}"
    annotationProcessor "org.spongepowered:mixin:0.8.5:processor"
    compileOnly fg.deobf("top.theillusivec4.curios:curios-forge:${curios_version}:api")
    runtimeOnly fg.deobf("top.theillusivec4.curios:curios-forge:${curios_version}")
}

mixin {
    add sourceSets.main, "mixins.${modid}.refmap.json"
    config "mixins.${modid}.json"
}

tasks.named('processResources', ProcessResources).configure {
    var replaceProperties = [
            modid: modid, mod_version: mod_version,
            mc_version: mc_version, mc_version_range: mc_version_range,
            forge_version: forge_version, forge_version_range: forge_version_range,
            curios_version: curios_version, curios_version_range: curios_version_range,
    ]
    inputs.properties replaceProperties
    filesMatching(['META-INF/mods.toml', 'pack.mcmeta']) {
        expand replaceProperties + [project: project]
    }
}

tasks.named('jar', Jar).configure {
    manifest {
        attributes([
                "Specification-Title": "${modid}",
                "Specification-Vendor": "Fooze",
                "Specification-Version": "1",
                "Implementation-Title": "${modid}",
                "Implementation-Version": "${mc_version}-${mod_version}",
                "Implementation-Vendor" :"Fooze",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
        ])
    }
    finalizedBy 'reobfJar'
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}
